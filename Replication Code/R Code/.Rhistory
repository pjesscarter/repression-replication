return(list(models,ses,ps))
}
vct <- cutoffrobust("shVictims_70")
stargazer(vct[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Victimization"),
keep.stat = c("n"), se =vct[[2]], p =vct[[3]])
?stargazer
#p values
stargazer(vct[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Victimization"),
keep.stat = c("n"), se =vct[[2]], p =vct[[3]], report=('vc*p'))
#Voter registration
reg <- cutoffrobust("Share_reg70_w2")
setwd("~/GitHub/repression-replication/Replication Code/R Code")
setwd("~/GitHub/repression-replication/Replication Code/R Code")
#Load packages for data exploration
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(lmtest,parallel,haven,data.table,stringr,dplyr,ggplot2,sf,stargazer,rdrobust,conleyreg,lfe,geosphere,Rcpp,RcppArmadillo)
setwd("../../conley-code/")
source("conley.R")
source("code/conley.R")
source("code/conley.R")
setwd("../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
shp <- read_sf("Map/cl_comunas_geo/Paper Replication/Data/Map/cl_comunas_geo.shp")
fnl <- data[[1]]
setwd("../../conley-code/")
fnl <- fnl %>% mutate(dist = exp(LnDistMilitaryBase),
IDProv = as.factor(IDProv),
year = as.factor(1)
)
makeform <- function(outcome){
#Edit to change baseline controls
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70")
f <- as.formula(
paste(paste(outcome,
paste(c("D",controls), collapse = " + "),
sep = " ~ "), "| year+ IDProv | 0 | longitud + latitud",sep=" "))
}
#Sample options are 'main', 'nona', 'all'
#weights argument controls whether weighted regression is used
fitlm <- function(treat,outcome,sample="main",weights=T,dc=3.11){
mdat <- fnl %>% mutate(D = as.numeric(dist<treat))
if(sample=="nona"){
mdat <- mdat %>% filter(!is.na(IDProv))
} else if(sample=="all"){
mdat <- mdat
} else{
mdat <- mdat %>% filter(MainSample==1)
}
if(weights){
mdat <- mdat %>% filter(!is.na(Pop70))
m <- felm(makeform(outcome),
data=mdat,weights = mdat$Pop70,keepCX=TRUE)
SE <- ConleySEs(reg = m,
unit = "IDProv",
time = "year",
lat = "latitud", lon = "longitud",
dist_fn = "SH", dist_cutoff = dc,
cores = 1,
verbose = F)
return(list(m,SE))
} else{
m <- felm(makeform(outcome),
data=mdat,keepCX=TRUE)
SE <- ConleySEs(reg = m,
unit = "IDProv",
time = "year",
lat = "latitud", lon = "longitud",
dist_fn = "SH", dist_cutoff = dc,
cores = 1,
verbose = F)
return(list(m,SE))
}
}
#Victimization results, robustness to binary linear regression
#Note that the largest comuna (Natales) has an area of approx 50 km^2, so
#a military base within 30 miles is potentially still equivalent to being in the same county
cutoffs <- c(3:5,10,20,30,50,100)
cutoffrobust <- function(outcome,sample="main",weights=T){
models<-list()
ps <- list()
ses <- list()
for(i in seq_along(cutoffs)){
m <-fitlm(treat = cutoffs[i],
outcome = outcome,
sample = sample,
weights= weights)
models[[i]] <- m[[1]]
ses[[i]] <- sqrt(diag(m[[2]]$Spatial_HAC))
ps[[i]] <- coeftest(m[[1]],vcov=m[[2]]$Spatial_HAC)[,4]
}
return(list(models,ses,ps))
}
vct <- cutoffrobust("shVictims_70")
stargazer(vct[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Victimization"),
keep.stat = c("n"), se =vct[[2]], p =vct[[3]])
#p values
stargazer(vct[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Victimization"),
keep.stat = c("n"), se =vct[[2]], p =vct[[3]], report=('vc*p'))
#Voter registration
reg <- cutoffrobust("Share_reg70_w2")
stargazer(reg[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Voter Registration"),
keep.stat = c("n"), se =reg[[2]], p =reg[[3]])
#p values
stargazer(vct[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Victimization"),
keep.stat = c("n"), se =vct[[2]], p =vct[[3]], report=('vc*p'))
#p values
stargazer(reg[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Voter Registration"),
keep.stat = c("n"), se =reg[[2]], p =reg[[3]])
#p values
stargazer(reg[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("Voter Registration"),
keep.stat = c("n"), se =reg[[2]], p =reg[[3]], report=('vc*p'))
#p values
stargazer(nov[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("NO Vote Share"),
keep.stat = c("n"),se =nov[[2]], p =nov[[3]], report=('vc*p'))
#Vote share NO
nov <- cutoffrobust("VoteShareNo")
stargazer(nov[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("NO Vote Share"),
keep.stat = c("n"),se =nov[[2]], p =nov[[3]])
#p values
stargazer(nov[[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = c("NO Vote Share"),
keep.stat = c("n"),se =nov[[2]], p =nov[[3]], report=('vc*p'))
#Recreate coefficient plots for Concertacion support
outcomes <- c("share_aylwin89",
"share_frei93",
"share_lagos99",
"share_bachelet05",
"share_frei09")
outcomenames <- c("Vote Share Aylwin 1989",
"Vote Share Frei 1993",
"Vote Share Lagos 1999",
"Vote Share Bachelet 2005",
"Vote Share Frei 2009")
voteshares <- list()
for(i in seq_along(outcomes)){
voteshares[[i]] <- cutoffrobust(outcomes[i])
}
for(i in seq_along(outcomes)){
stargazer(voteshares[[i]][[1]],
style="apsr",column.labels =  paste0(cutoffs, " Miles"),
keep=1,
covariate.labels = c("Treatment Indicator"),
dep.var.labels = outcomenames[i],
keep.stat = c("n"),se =voteshares[[i]][[2]], p =voteshares[[i]][[3]])
}
cutoffs <- seq(2,20,0.1)
#Store point estimate along with robust SE and p-value, plus cutoff
store <- matrix(nrow = length(cutoffs),ncol=4)
for(i in seq_along(cutoffs)){
m <-tryCatch({rdrobust(y=fnl$Share_reg70_w2,x=fnl$dist,fuzzy = fnl$DVictims_p75,
deriv =0,
c=cutoffs[i],
p=1,
q=2,
kernel = "epanechnikov",
masspoints="adjust",
subset = !is.na(fnl$IDProv),
covs = cbind(fnl$share_allende70,
fnl$share_alessandri70,
fnl$lnDistStgo,
fnl$lnDistRegCapital,
fnl$Pop70_pthousands,
fnl$sh_rural_70))},
error = function(e) NA
)
if(!is.na(m)){
store[i,] <- c(m$coef[3],m$se[3],m$pv[3],cutoffs[i])
}
}
store[which(store[,3]<0.05),]
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(haven,stringr,dplyr,ggplot2,randomForest,Matching,sf,ggmap,glmnet,glmnetUtils)
setwd("../../Extracted Files/Data")
getwd()
setwd("~/GitHub/repression-replication/Replication Code/R Code")
setwd("../../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
#option to change propensity score estimation method - change to 'logit' for logit
psmodel <- "rf"
#Use all controls with ML estimation
controlset <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv",
"share_up71_local",
"mayor_up71",
"share_up73_congress",
"landlocked",
"Houses_pc",
"ari_1973",
"index1b",
"SocialOrg_pop70",
"sh_educ_12more",
"densidad_1970",
"sh_econactivepop_70")
makeform <- function(outcome,extracontrols = NULL){
#Edit to change baseline controls
controls <- unique(c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv",extracontrols))
f <- as.formula(
paste(outcome,
paste(controls, collapse = " + "),
sep = " ~ "))
}
fnl_ps <- fnl %>% dplyr::select(longitud,latitud,all_of(controlset),DMilitaryPresence,Pop70,shVictims_70,Share_reg70_w2,VoteShareNo,all_of(c("share_aylwin89",
"share_frei93",
"share_lagos99",
"share_bachelet05",
"share_frei09"))) %>% mutate(DMilitaryPresence = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv)) %>% na.omit()
if(psmodel == "rf"){
rf_out <- randomForest(makeform("DMilitaryPresence",controlset),data= fnl_ps,ntree=1000)
ps <- rf_out$votes[,2]
fnl_ps$propscore <- ps
} else if (psmodel == "logit"){
#prediction with elnet - model performs poorly with unregularized logit or pure lasso, but changes in alpha do not affect results
#Use 3-fold cv due to small sample size
foldids <- sample(1:3,nrow(fnl_ps),replace = T)
logout <- cv.glmnet(model.matrix(makeform("DMilitaryPresence",controlset),fnl_ps),fnl_ps$DMilitaryPresence,family=binomial(),alpha=0.4,foldids=foldids)
ps <- predict(logout,model.matrix(makeform("DMilitaryPresence",controlset),fnl_ps),s=logout$lambda.min,type="response")
fnl_ps$propscore <- ps
}
#Decent overlap, but only for a small subset of treated observations
#Even worse if logit is used
ggplot(fnl_ps,aes(x=ps,fill=DMilitaryPresence)) + geom_density(alpha=0.4)
#Victimization
fnl_ps_vict <- fnl_ps %>% filter(!is.na(shVictims_70)) %>% mutate(D = DMilitaryPresence ==1)
#1:1 matching with replacement, using pop weights - authors do not specify estimand but
#can infer that it is the ATE
matched <- Match(Y=fnl_ps_vict$shVictims_70,
Tr=fnl_ps_vict$D,
X=fnl_ps_vict$propscore,
M=1,
weights = fnl_ps_vict$Pop70,
estimand = "ATE",
caliper = 1)
#ATE = 1.3547, SE = 0.10632, p < 2.22e-16
#Dramatic improvement in covariate balance but 0 obvs in many provinces
#Note also that KS tests still have p-values close to 0 for most covariates
mb <- MatchBalance(makeform("D"),data=fnl_ps_vict,match.out = matched,nboots=1000)
#Examine matched outcomes - if we get the map we can plot these
matchedunits <- bind_rows(fnl_ps_vict[matched$index.treated,],fnl_ps_vict[matched$index.control,])
matchedunits$pair <- factor(rep(matched$index.treated, 2))
matchedunits$Treatment <- as.factor(ifelse(matchedunits$D,"Treatment","Control"))
shp <- read_sf("Map/cl_comunas_geo/Paper Replication/Data/Map/cl_comunas_geo.shp")
ggplot() + geom_sf(data = shp) + geom_point(data=matchedunits,aes(x=longitud,y=latitud,shape=pair,col = Treatment))
#NO Votes
fnl_ps_no <- fnl_ps %>% filter(!is.na(VoteShareNo)) %>% mutate(D = DMilitaryPresence ==1)
#1:1 matching with replacement, using pop weights - authors do not specify estimand but
#can infer that it is the ATE
matched <- Match(Y=fnl_ps_no$VoteShareNo,
Tr=fnl_ps_no$D,
X=fnl_ps_no$propscore,
M=1,
weights = fnl_ps_no$Pop70,
estimand = "ATE",
caliper = 1)
#ATE = -4.7927 , SE = 0.32414 , p < 2.22e-16
mb <- MatchBalance(makeform("D"),data=fnl_ps_no,match.out = matched,nboots=1000)
#Examine matched outcomes - if we get the map we can plot these
matchedunits <- bind_rows(fnl_ps_no[matched$index.treated,],fnl_ps_no[matched$index.control,])
#1:1 matching with replacement, using pop weights - authors do not specify estimand but
#can infer that it is the ATE
matched <- Match(Y=fnl_ps_no$VoteShareNo,
Tr=fnl_ps_no$D,
X=fnl_ps_no$propscore,
M=1,
weights = fnl_ps_no$Pop70,
estimand = "ATE",
caliper = 1)
#Victimization
fnl_ps_vict <- fnl_ps %>% filter(!is.na(shVictims_70)) %>% mutate(D = DMilitaryPresence ==1)
#1:1 matching with replacement, using pop weights - authors do not specify estimand but
#can infer that it is the ATE
matched <- Match(Y=fnl_ps_vict$shVictims_70,
Tr=fnl_ps_vict$D,
X=fnl_ps_vict$propscore,
M=1,
weights = fnl_ps_vict$Pop70,
estimand = "ATE",
caliper = 1)
matched
summary(matched)
#ATE = 1.3547, SE = 0.10632, p < 2.22e-16
#Dramatic improvement in covariate balance but 0 obvs in many provinces
#Note also that KS tests still have p-values close to 0 for most covariates
mb <- MatchBalance(makeform("D"),data=fnl_ps_vict,match.out = matched,nboots=1000)
#Examine matched outcomes - if we get the map we can plot these
matchedunits <- bind_rows(fnl_ps_vict[matched$index.treated,],fnl_ps_vict[matched$index.control,])
matchedunits$pair <- factor(rep(matched$index.treated, 2))
matchedunits$Treatment <- as.factor(ifelse(matchedunits$D,"Treatment","Control"))
shp <- read_sf("Map/cl_comunas_geo/Paper Replication/Data/Map/cl_comunas_geo.shp")
ggplot() + geom_sf(data = shp) + geom_point(data=matchedunits,aes(x=longitud,y=latitud,shape=pair,col = Treatment))
#NO Votes
fnl_ps_no <- fnl_ps %>% filter(!is.na(VoteShareNo)) %>% mutate(D = DMilitaryPresence ==1)
#1:1 matching with replacement, using pop weights - authors do not specify estimand but
#can infer that it is the ATE
matched <- Match(Y=fnl_ps_no$VoteShareNo,
Tr=fnl_ps_no$D,
X=fnl_ps_no$propscore,
M=1,
weights = fnl_ps_no$Pop70,
estimand = "ATE",
caliper = 1)
summary(matched)
#ATE = -4.7927 , SE = 0.32414 , p < 2.22e-16
mb <- MatchBalance(makeform("D"),data=fnl_ps_no,match.out = matched,nboots=1000)
#Examine matched outcomes - if we get the map we can plot these
matchedunits <- bind_rows(fnl_ps_no[matched$index.treated,],fnl_ps_no[matched$index.control,])
matchedunits$pair <- factor(rep(M$index.treated, 2))
setwd("~/GitHub/repression-replication/Replication Code/R Code")
load(drobust.RData)
load("drobust.RData")
summary(drobust_no)
drobust_no
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(haven,stringr,dplyr,ggplot2,drtmle,nloptr,polspline,SuperLearner)
summary(drobust_no)
drobust_no
?drtmle
wald_test(drobust_no, contrast = c(-1,1))
ci(drobust_no, contrast = c(-1,1))
ci(drobust_reg, contrast = c(-1,1))
wald_test(drobust_reg, contrast = c(-1,1))
ci(drobust_vict, contrast = c(-1,1))
wald_test(drobust_vict, contrast = c(-1,1))
remove(list = ls())
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(haven,stringr,dplyr,ggplot2,mediation)
load("mediation.RData")
summary(medmods)
summary(medmods[[1]])
knitr::opts_chunk$set(echo = TRUE)
### Library
library(sf)
library(ggplot2)
library(tmap)
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(stargazer)
library(stringr)
library(vtable)
library(haven)
library(ggplot2)
library(expss)
library(gridExtra)
library(ggrepel)
#Load data
setwd("../../Extracted Files/Data")
d.rep <- read_dta("FinalDatasetForReplication.dta")
d.mil <- read_dta("MilitaryBasesByYear.dta")
d.vic <- read_dta("VictimsByYear.dta")
d.lb <- read_dta("LB_Analysis.dta")
#Arrange by province and comuna
d.rep <- d.rep %>% arrange(IDProv, comuna)
d.rep <- d.rep %>% dplyr::select(IDProv, comuna, MainSample, DMilitaryPresence, everything())
#Library
library("fixest")
#Main variables (as in Dofile of tables)
# share_allende70 share_alessandri70 Turnout70
# share_up71_local mayor_up71 share_up73_congress lnDistStgo
# lnDistRegCapital landlocked Pop70_pthousands Houses_pc SocialOrg_pop70
# churches_pop70 sh_educ_12more densidad_1970 sh_rural_70 sh_econactivepop_70
# sh_women_70 TV ari_1973 index1b"
#	Controls
C <- c("share_allende70", "share_alessandri70", "lnDistStgo", "lnDistRegCapital", "Pop70_pthousands", "sh_rural_70")
# Weights
#W <-  Pop70
#Table 2
#STATA code: reghdfe shVictims_70 	DMilitaryPresence $C [aw=$W], absorb(IDProv) vce(robust)
#Column 1
tb2.1 <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Get same results. Works.
#Table D5 Robustness checks
tb2.1.full <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
#Get same results. Works.
#NOTES: 47 observations removed because of 0-weight.
#These are the counties which do not have province
#57 observations removed because of NA values (LHS: 53, RHS: 27, Fixed-effects: 52, Weights: 6).
#We have 53 obs with NA in shVictims_70. The N showed in the table is not the real one.
#Remove weights
tb2.1.nw <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
#Continues to be significant
tb2.1.full.nw <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
#Becomes insignificant (without weights and full population)
#Table 3
#STATA code: reghdfe Share_reg70_w2 		DMilitaryPresence 	$C [aw=$W], absorb(IDProv) vce(robust)
#Column 1
tb3.1 <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Replicates well
#Column 4 and 3
tb3.4 <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Replicates well
tb3.3 <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Table D5, Column 2
tb3.1.full <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
#Replicates well
#Note: I get this
#NOTES: 47 observations removed because of 0-weight.
#These are the counties which do not have province
#57 observations removed because of NA values (LHS: 53, RHS: 27, Fixed-effects: 52, Weights: 6).
#But in the paper it says its run on all 289. This, as before, is not correct.
#Table D5, Column 3
tb3.3.full <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
tb3.4.full <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
#I am able to replicate this. But this doesnt use the same variable as in the main regression. Its weighted by 1988.
#Does not do robustness check for column 4.
#Explore weights
table(d.rep$IDProv, d.rep$Pop70, useNA="always")
#Remove weights
tb3.1.nw <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
tb3.4.nw <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
tb3.3.nw <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
tb3.1.full.nw <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
tb3.3.full.nw <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
tb3.4.full.nw <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
tb2.1
tb2.1.nw
tb2.1.full.nw
tbl3.1
tb3.1
tb3.4
tb3.3
tb3.1.full
#Explore weights
table(d.rep$IDProv, d.rep$Pop70, useNA="always")
tb3.3.full
tb3.1.full.nw
tb3.3.full.nw
tb3.4.full.nw
print(tb2.1, type = "table")
print(tb2.1.full, type = "table")
print(tb2.1.nw, type="table")
print(tb2.1.full.nw, type="table")
?feols
#Replicates well
tb3.1.2sls <- feols(Share_reg70_w2 ~ .[C] | IDProv | shVictims_70 ~ DMilitaryPresence, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
summary(tb3.1.2sls)
tb3.3.2sls <- feols(VoteShareNo ~ .[C] | IDProv | shVictims_70 ~ DMilitaryPresence, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
summary(tb3.3.2sls)
