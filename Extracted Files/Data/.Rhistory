treatment.identifier = 35,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
#Identified treated comunas
treat <- unique(d.syn.turn.wide[d.syn.turn.wide$DMilitaryPresence==1,]$comuna)
control <- unique(d.syn.turn.wide[d.syn.turn.wide$DMilitaryPresence==0,]$comuna)
#Remove control units with missing in all obs for some predictors
idx = which(control %in% c(162, 197, 217, 257, 287, 55, 103, 243, 150, 216, 222, 223)) # Positions of the values of y in x
control = control[-idx] # Remove those values using their position and "-" operator
#Step neededm to make sure runs smoothly
d.syn.turn[,c("IDProv", C, Cplus, Cplusplus)] <- sapply(d.syn.turn[,c("IDProv", C, Cplus, Cplusplus)],as.numeric)
d.syn.turn <- as.data.frame(d.syn.turn)
#Data prep for synthetic control
dataprep_out <- dataprep(
foo = d.syn.turn,
predictors = c("IDProv", C, Cplus, Cplusplus), #These are the same value across all years
predictors.op = "mean",
time.predictors.prior = c(1952, 1958, 1964, 1970),
special.predictors = list(list("turnout", c(1952, 1958, 1964, 1970), "mean")),
dependent = "turnout",
unit.variable = "comuna",
time.variable = "year",
treatment.identifier = 35,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
table(d.syn.turn.wide[is.na(d.syn.turn.wide$Turnout64),]$comuna)
#Identified treated comunas
treat <- unique(d.syn.turn.wide[d.syn.turn.wide$DMilitaryPresence==1,]$comuna)
control <- unique(d.syn.turn.wide[d.syn.turn.wide$DMilitaryPresence==0,]$comuna)
#Remove control units with missing in all obs for some predictors
idx = which(control %in% c(162, 197, 217, 257, 287, 55, 103, 243, 150, 216, 222, 223,
22, 94, 119, 127, 162, 173, 197, 257, 287)) # Positions of the values of y in x
control = control[-idx] # Remove those values using their position and "-" operator
#Step neededm to make sure runs smoothly
d.syn.turn[,c("IDProv", C, Cplus, Cplusplus)] <- sapply(d.syn.turn[,c("IDProv", C, Cplus, Cplusplus)],as.numeric)
d.syn.turn <- as.data.frame(d.syn.turn)
#Data prep for synthetic control
dataprep_out <- dataprep(
foo = d.syn.turn,
predictors = c("IDProv", C, Cplus, Cplusplus), #These are the same value across all years
predictors.op = "mean",
time.predictors.prior = c(1952, 1958, 1964, 1970),
special.predictors = list(list("turnout", c(1952, 1958, 1964, 1970), "mean")),
dependent = "turnout",
unit.variable = "comuna",
time.variable = "year",
treatment.identifier = 35,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
synth_out <- synth(data.prep.obj = dataprep_out)
dataprep_out <- dataprep(
foo = na.omit(d.syn.turn),
predictors = c("IDProv", C, Cplus, Cplusplus), #These are the same value across all years
predictors.op = "mean",
time.predictors.prior = c(1952, 1958, 1964, 1970),
special.predictors = list(list("turnout", c(1952, 1958, 1964, 1970), "mean")),
dependent = "turnout",
unit.variable = "comuna",
time.variable = "year",
treatment.identifier = 35,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
synth_out <- synth(data.prep.obj = dataprep_out)
na.omit(d.syn.turn)
d.syn.turn
treat <- unique(d.syn.turn.wide[d.syn.turn.wide$DMilitaryPresence==1,]$comuna)
treat
dataprep_out <- dataprep(
foo = d.syn.turn,
predictors = c("IDProv", C, Cplus, Cplusplus), #These are the same value across all years
predictors.op = "mean",
time.predictors.prior = c(1952, 1958, 1964, 1970),
special.predictors = list(list("turnout", c(1952, 1958, 1964, 1970), "mean")),
dependent = "turnout",
unit.variable = "comuna",
time.variable = "year",
treatment.identifier = 17,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
synth_out <- synth(data.prep.obj = dataprep_out)
path.plot(synth_out,dataprep_out)
gaps.plot(synth_out,dataprep_out)
gaps.plot(synth_out,dataprep_out)
synth._ables <- synth.tab(
dataprep.res = dataprep_out,
synth.res = synth_out)
synth._ables
#Data prep for synthetic control
dataprep_out <- dataprep(
foo = d.syn.turn,
predictors = c(C, Cplus), #These are the same value across all years
predictors.op = "mean",
time.predictors.prior = c(1952, 1958, 1964, 1970),
special.predictors = list(list("turnout", c(1952, 1958, 1964, 1970), "mean")),
dependent = "turnout",
unit.variable = "comuna",
time.variable = "year",
treatment.identifier = 17,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
synth_out <- synth(data.prep.obj = dataprep_out)
synth_out <- synth(data.prep.obj = dataprep_out)
path.plot(synth_out,dataprep_out)
gaps.plot(synth_out,dataprep_out)
synth._ables <- synth.tab(
dataprep.res = dataprep_out,
synth.res = synth_out)
print(synth.tables)
synth.tables <- synth.tab(
dataprep.res = dataprep_out,
synth.res = synth_out)
print(synth.tables)
table(d.syn.turn.wide[d.syn.turn.wide$comuna==17,]$IDProv)
table(d.syn.turn.wide[d.syn.turn.wide$IDProv==5,]$comuna)
table(d.syn.turn.wide[d.syn.turn.wide$comuna==148,]$IDProv)
table(d.syn.turn.wide[d.syn.turn.wide$comuna==8,]$IDProv)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop=3)
library(Synth)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop=3)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop=3)
library(Synth)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop=3)
install.packages("SCtools")
library(SCtools)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop=3)
install.packages("rlang")
library(rlang)
detach("package:rlang", unload=TRUE)
library(rlang)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(ggplot2)
library(tmap)
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(stargazer)
library(stringr)
library(vtable)
library(haven)
library(ggplot2)
library(expss)
library(gridExtra)
library(ggrepel)
library(labelled)
#Load data
setwd("/Users/maranzazuru/Dropbox/Research/Replication Project/Extracted Files/Data")
d.rep <- read_dta("FinalDatasetForReplication.dta")
d.mil <- read_dta("MilitaryBasesByYear.dta")
d.vic <- read_dta("VictimsByYear.dta")
d.lb <- read_dta("LB_Analysis.dta")
#Arrange by province and comuna
d.rep <- d.rep %>% arrange(IDProv, comuna)
d.rep <- d.rep %>% select(IDProv, comuna, MainSample, DMilitaryPresence, everything())
#Library for synthetic control
library(haven)
library(Synth)
library(SCtools)
#Create panel for voter turnout
vtable(d.rep)
# Controls paper includes:
C <- c("share_allende70", "share_alessandri70", "lnDistStgo", "lnDistRegCapital", "Pop70_pthousands", "sh_rural_70")
#Controls that are significant in Table 1 (which they try to minimize with FE)
Cplus <- c("share_up73_congress", "landlocked", "densidad_1970", "churches_pop70", "Pop70", "Houses_pc", "SocialOrg_pop70")
#Missing turnout in the 70s.
#Things I believe can be predictive of turnout
Cplusplus <- c("publicgoods", "index1b", "sh_econactivepop_70", "sh_educ_12more", "sh_unemp_82")
#Y variable: turnout
Y <- c("Share_reg70_w2", "Turnout70", "Turnout64", "Turnout58", "Turnout52")
#Create database only main variables
d.syn.turn.wide <- d.rep %>% filter(!(is.na(IDProv))) %>% select((paste(c("IDProv", "comuna", "DMilitaryPresence", Y, C, Cplus, Cplusplus), sep = " , ")))
d.syn.turn <- gather(d.syn.turn.wide, year, turnout, all_of(Y), factor_key=FALSE) %>%
arrange(IDProv, comuna)
#We should have: 1,470 (good!)
#Put time variable
d.syn.turn <- d.syn.turn %>% mutate(
year = case_when(
year == "Share_reg70_w2" ~ 1988,
year == "Turnout70" ~ 1970,
year == "Turnout64" ~ 1964,
year == "Turnout58" ~ 1958,
year == "Turnout52" ~ 1952))
d.syn.turn <- d.syn.turn %>% select(IDProv, comuna, year, turnout, everything()) %>% arrange(IDProv, comuna, year)
#Leave treatment indicator only for 1988
d.syn.turn <- d.syn.turn %>% mutate(
DMilitaryPresence = case_when(
year==1970 ~ 0,
year==1964 ~ 0,
year==1958 ~ 0,
year==1952 ~ 0,
year==1988 ~ DMilitaryPresence
))
#Identified treated comunas
treat <- unique(d.syn.turn.wide[d.syn.turn.wide$DMilitaryPresence==1,]$comuna)
control <- unique(d.syn.turn.wide[d.syn.turn.wide$DMilitaryPresence==0,]$comuna)
#Remove control units with missing in all obs for some predictors or turnover values
idx = which(control %in% c(162, 197, 217, 257, 287, 55, 103, 243, 150, 216, 222, 223,
22, 94, 119, 127, 162, 173, 197, 257, 287))
control = control[-idx]
#Step neededm to make sure runs smoothly
d.syn.turn[,c("IDProv", C, Cplus, Cplusplus)] <- sapply(d.syn.turn[,c("IDProv", C, Cplus, Cplusplus)],as.numeric)
d.syn.turn <- as.data.frame(d.syn.turn)
#Data prep for synthetic control
dataprep_out <- dataprep(
foo = d.syn.turn,
predictors = c(C, Cplus), #These are the same value across all years
predictors.op = "mean",
time.predictors.prior = c(1952, 1958, 1964, 1970),
special.predictors = list(list("turnout", c(1952, 1958, 1964, 1970), "mean")),
dependent = "turnout",
unit.variable = "comuna",
time.variable = "year",
treatment.identifier = 17,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
synth_out <- synth(data.prep.obj = dataprep_out)
#Graph of parallel trends
path.plot(synth_out,dataprep_out)
#Graph of gap between lines
gaps.plot(synth_out,dataprep_out)
#Get weights
synth.tables <- synth.tab(
dataprep.res = dataprep_out,
synth.res = synth_out)
print(synth.tables)
print(synth.tables)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop=3)
plot_placebos(placebos)
treat
dataprep_out <- dataprep(
foo = d.syn.turn,
predictors = c(C, Cplus), #These are the same value across all years
predictors.op = "mean",
time.predictors.prior = c(1952, 1958, 1964, 1970),
special.predictors = list(list("turnout", c(1952, 1958, 1964, 1970), "mean")),
dependent = "turnout",
unit.variable = "comuna",
time.variable = "year",
treatment.identifier = 265,
controls.identifier = control,
time.optimize.ssr = c(1952, 1958, 1964, 1970),
time.plot = c(1952, 1958, 1964, 1970,1988))
synth_out <- synth(data.prep.obj = dataprep_out)
#Turnover graphs: synthetic vs treated comuna 17
#Graph of parallel trends
path.plot(synth_out,dataprep_out)
#Graph of gap between lines
gaps.plot(synth_out,dataprep_out)
#Get weights
synth.tables <- synth.tab(
dataprep.res = dataprep_out,
synth.res = synth_out)
print(synth.tables)
placebos <- generate.placebos(dataprep_out, synth_out, Sigf.ipop=3)
#Load packages for data exploration
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(haven,stringr,dplyr,ggplot2,sf,stargazer,rdrobust,conleyreg)
?conleyreg
ConleySEs
load("drobust.RData")
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(haven,stringr,dplyr,ggplot2,drtmle,nloptr,polspline,SuperLearner)
summary(drobust_no)
drobust_no
ci(drobust_reg, contrast = c(1,-1))
ci(drobust_vict, contrast = c(1,-1))
wald_test(drobust_vict, contrast = c(1, -1))
wald_test(drobust_vict, contrast = c(1, -1))
wald_test(drobust_no, contrast = c(-1,1))
ci(drobust_no, contrast = c(-1,1))
ci(drobust_reg, contrast = c(-1,1))
wald_test(drobust_reg, contrast = c(-1,1))
knitr::opts_chunk$set(echo = TRUE)
### Library
library(sf)
library(ggplot2)
library(tmap)
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(stargazer)
library(stringr)
library(vtable)
library(haven)
library(ggplot2)
library(expss)
library(gridExtra)
library(ggrepel)
getwd()
#Load data
setwd("../../Extracted Files/Data")
#Load data
setwd("../../Extracted Files/Data")
d.rep <- read_dta("FinalDatasetForReplication.dta")
d.mil <- read_dta("MilitaryBasesByYear.dta")
d.vic <- read_dta("VictimsByYear.dta")
d.lb <- read_dta("LB_Analysis.dta")
#Arrange by province and comuna
d.rep <- d.rep %>% arrange(IDProv, comuna)
d.rep <- d.rep %>% select(IDProv, comuna, MainSample, DMilitaryPresence, everything())
#Library
library("fixest")
#Main variables (as in Dofile of tables)
# share_allende70 share_alessandri70 Turnout70
# share_up71_local mayor_up71 share_up73_congress lnDistStgo
# lnDistRegCapital landlocked Pop70_pthousands Houses_pc SocialOrg_pop70
# churches_pop70 sh_educ_12more densidad_1970 sh_rural_70 sh_econactivepop_70
# sh_women_70 TV ari_1973 index1b"
#	Controls
C <- c("share_allende70", "share_alessandri70", "lnDistStgo", "lnDistRegCapital", "Pop70_pthousands", "sh_rural_70")
# Weights
#W <-  Pop70
#Table 2
#STATA code: reghdfe shVictims_70 	DMilitaryPresence $C [aw=$W], absorb(IDProv) vce(robust)
#Column 1
tb2.1 <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Get same results. Works.
#Table D5 Robustness checks
tb2.1.full <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
#Get same results. Works.
#NOTES: 47 observations removed because of 0-weight.
#These are the counties which do not have province
#57 observations removed because of NA values (LHS: 53, RHS: 27, Fixed-effects: 52, Weights: 6).
#We have 53 obs with NA in shVictims_70. The N showed in the table is not the real one.
#Remove weights
tb2.1.nw <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
#Continues to be significant
tb2.1.full.nw <- feols(shVictims_70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
#Becomes insignificant (without weights and full population)
#Table 3
#STATA code: reghdfe Share_reg70_w2 		DMilitaryPresence 	$C [aw=$W], absorb(IDProv) vce(robust)
#Column 1
tb3.1 <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Replicates well
#Column 4 and 3
tb3.4 <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Replicates well
tb3.3 <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero", weights = ~Pop70)
#Table D5, Column 2
tb3.1.full <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
#Replicates well
#Note: I get this
#NOTES: 47 observations removed because of 0-weight.
#These are the counties which do not have province
#57 observations removed because of NA values (LHS: 53, RHS: 27, Fixed-effects: 52, Weights: 6).
#But in the paper it says its run on all 289. This, as before, is not correct.
#Table D5, Column 3
tb3.3.full <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
tb3.4.full <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero", weights = ~Pop70)
#I am able to replicate this. But this doesnt use the same variable as in the main regression. Its weighted by 1988.
#Does not do robustness check for column 4.
#Explore weights
table(d.rep$IDProv, d.rep$Pop70, useNA="always")
#Remove weights
tb3.1.nw <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
tb3.4.nw <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
tb3.3.nw <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep[d.rep$MainSample==1,], "hetero")
tb3.1.full.nw <- feols(Share_reg70_w2 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
tb3.3.full.nw <- feols(VoteShareNo ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
tb3.4.full.nw <- feols(VoteShareNo_pop70 ~ DMilitaryPresence + .[C] | IDProv, data = d.rep, "hetero")
print(tb2.1, type = "table")
print(tb2.1.full, type = "table")
print(tb2.1.nw, type="table")
print(tb2.1.full.nw, type="table")
print(tb2.1, type = "table")
print(tb2.1.full, type = "table")
print(tb3.1, type="table")
print(tb3.1.full, type="table")
print(tb3.1.nw, type="table")
print(tb3.1.full.nw, type="table")
print(tb3.4, type="table")
print(tb3.4.full, type="table")
print(tb3.4.nw, type="table")
print(tb3.4.full.nw, type="table")
print(tb3.3, type="table")
print(tb3.3.full, type="table")
print(tb3.3.nw, type="table")
print(tb3.3.full.nw, type="table")
table(d.rep[d.rep$Pop70==0,]$IDProv, useNA="always")
table(d.rep[d.rep$Pop70==0,]$VoteShareNo_pop70, useNA="always")
table(d.rep[d.rep$Pop70==0,]$VoteShareNo, useNA="always")
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(haven,stringr,dplyr,ggplot2,randomForest,Matching,sf,ggmap,glmnet,glmnetUtils)
setwd("../../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
#option to change propensity score estimation method - change to 'logit' for logit
psmodel <- "rf"
#Use all controls with ML estimation
controlset <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv",
"share_up71_local",
"mayor_up71",
"share_up73_congress",
"landlocked",
"Houses_pc",
"ari_1973",
"index1b",
"SocialOrg_pop70",
"sh_educ_12more",
"densidad_1970",
"sh_econactivepop_70")
makeform <- function(outcome,extracontrols = NULL){
#Edit to change baseline controls
controls <- unique(c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv",extracontrols))
f <- as.formula(
paste(outcome,
paste(controls, collapse = " + "),
sep = " ~ "))
}
fnl_ps <- fnl %>% dplyr::select(longitud,latitud,all_of(controlset),DMilitaryPresence,Pop70,shVictims_70,Share_reg70_w2,VoteShareNo,all_of(c("share_aylwin89",
"share_frei93",
"share_lagos99",
"share_bachelet05",
"share_frei09"))) %>% mutate(DMilitaryPresence = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv)) %>% na.omit()
if(psmodel == "rf"){
rf_out <- randomForest(makeform("DMilitaryPresence",controlset),data= fnl_ps,ntree=1000)
ps <- rf_out$votes[,2]
fnl_ps$propscore <- ps
} else if (psmodel == "logit"){
#prediction with elnet - model performs poorly with unregularized logit or pure lasso, but changes in alpha do not affect results
#Use 3-fold cv due to small sample size
foldids <- sample(1:3,nrow(fnl_ps),replace = T)
logout <- cv.glmnet(model.matrix(makeform("DMilitaryPresence",controlset),fnl_ps),fnl_ps$DMilitaryPresence,family=binomial(),alpha=0.4,foldids=foldids)
ps <- predict(logout,model.matrix(makeform("DMilitaryPresence",controlset),fnl_ps),s=logout$lambda.min,type="response")
fnl_ps$propscore <- ps
}
#Decent overlap, but only for a small subset of treated observations
#Even worse if logit is used
ggplot(fnl_ps,aes(x=ps,fill=DMilitaryPresence)) + geom_density(alpha=0.4)
#Victimization
fnl_ps_vict <- fnl_ps %>% filter(!is.na(shVictims_70)) %>% mutate(D = DMilitaryPresence ==1)
#1:1 matching with replacement, using pop weights - authors do not specify estimand but
#can infer that it is the ATE
matched <- Match(Y=fnl_ps_vict$shVictims_70,
Tr=fnl_ps_vict$D,
X=fnl_ps_vict$propscore,
M=1,
weights = fnl_ps_vict$Pop70,
estimand = "ATE",
caliper = 1)
#ATE = 1.3547, SE = 0.10632, p < 2.22e-16  - sign swap!
#Dramatic improvement in covariate balance but 0 obvs in many provinces
#Note also that KS tests still have p-values close to 0 for most covariates
mb <- MatchBalance(makeform("D"),data=fnl_ps_vict,match.out = matched,nboots=1000)
summary(matched)
#NO Votes
fnl_ps_no <- fnl_ps %>% filter(!is.na(VoteShareNo)) %>% mutate(D = DMilitaryPresence ==1)
#1:1 matching with replacement, using pop weights - authors do not specify estimand but
#can infer that it is the ATE
matched <- Match(Y=fnl_ps_no$VoteShareNo,
Tr=fnl_ps_no$D,
X=fnl_ps_no$propscore,
M=1,
weights = fnl_ps_no$Pop70,
estimand = "ATE",
caliper = 1)
summary(matched)
ci(drobust_vict, contrast = c(-1,1))
wald_test(drobust_vict, contrast = c(-1,1))
ci(drobust_vict, contrast = c(-1,1))
ci(drobust_no, contrast = c(-1,1))
wald_test(drobust_no, contrast = c(-1,1))
ci(drobust_reg, contrast = c(-1,1))
wald_test(drobust_reg, contrast = c(-1,1))
drobust_vict <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=1,
avg_over= c("drtmle", "SL"),
n_SL = 10)
ci(drobust_vict, contrast = c(-1,1))
wald_test(drobust_vict, contrast = c(-1,1))
summary(drobust_vict)
ci(drobust_vict, contrast = c(-1,1))
wald_test(drobust_vict, contrast = c(-1,1))
load("mediation.RData")
getwd()
load("../../Replication Code/R Code/mediaton.RData")
load("../../Replication Code/R Code/mediation.RData")
lapply(medmods,function(x){summary(x)})
p_load(haven,stringr,dplyr,ggplot2,mediation)
lapply(medmods,function(x){summary(x)})
