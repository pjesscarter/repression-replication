n_SL = 10)
,
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
,
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
c("share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
controls <- c("share_allende70")#,
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = zap_labels(zap_formats(fnl_vict[,controls])), A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
fnl_vict[,controls]
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict$share_allende70, A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
sum(is.na(fnl_v))
sum(is.na(fnl_vict$share_allende70))
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = data.frame(fnl_vict$share_allende70), A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = data.frame(fnl_vict$IDProv), A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
# c("share_alessandri70",
# "lnDistStgo",
# "lnDistRegCapital",
# "Pop70_pthousands",
# "sh_rural_70",
# "IDProv")
#SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
#"SL.polymars", "SL.mean","SL.npreg")
SL_library <- c("SL.glm,SL.mean")
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
#SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
#"SL.polymars", "SL.mean","SL.npreg")
SL_library <- c("SL.glm,SL.mean")
#Victimization
fnl_vict <- fnl %>% filter(!is.na(shVictims_70)) %>% mutate(D = DMilitaryPresence ==1)
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
#SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
#"SL.polymars", "SL.mean","SL.npreg")
SL_library <- c("SL.glm","SL.mean")
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
#Victimization
fnl_vict <- fnl %>% select(controls)
#Victimization
fnl_vict <- fnl %>% select(list(controls))
#Victimization
fnl_vict <- fnl %>% select(all_of(controls))
#Victimization
fnl_vict <- fnl %>% dplyr::select(all_of(controls))
p_load(haven,stringr,dplyr,ggplot2,drtmle,nloptr,polspline)
setwd("../../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl %>% mutate(DMilitaryPresence = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls))
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls)) %>% na.omit()
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
set.seed(08540)
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
"IDProv")
#SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
#"SL.polymars", "SL.mean","SL.npreg")
SL_library <- c("SL.glm","SL.mean")
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70")
#SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
#"SL.polymars", "SL.mean","SL.npreg")
SL_library <- c("SL.glm","SL.mean")
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
summary(npreg_fit)
npreg_fit$drtmle$est
npreg_fit
ci(npreg_fit)
ci(npreg_fit, contrast = c(1,-1))
ci(npreg_fit, contrast = c(-1,1))
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D)
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
"SL.polymars", "SL.mean","SL.npreg")
#SL_library <- c("SL.glm","SL.mean")
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#SL_library <- c("SL.glm","SL.mean")
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
ci(npreg_fit, contrast = c(-1,1))
model.matrix( ~ IDProv - 1, data=fnl )
as.factor(model.matrix( ~ IDProv - 1, data=fnl ))
levels(fnl$IDProv)
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv)) %>% select(!is.na(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv)) %>% dplyr::select(!is.na(IDProv))
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv)) %>% dplyr::select(!is.na(IDProv))
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv)) %>% dplyr::select(!is.na(IDProv))
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl  %>% dplyr::select(!is.na(IDProv)) %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
fnl$IDProv
p_load(haven,stringr,dplyr,ggplot2,drtmle,nloptr,polspline)
setwd("../../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl  %>% dplyr::select(!is.na(IDProv)) %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
fnl %>% select_(IDProv)
fnl <- fnl  %>% filter(!is.na(IDProv)) %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
paste0("IDProv",1:length(levels(IDProv))))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
paste0("IDProv",1:length(levels(fnl$IDProv))))
controls
SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
"SL.polymars", "SL.mean","SL.npreg")
#SL_library <- c("SL.glm","SL.mean")
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
npreg_fit <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
p_load(haven,stringr,dplyr,ggplot2,drtmle,nloptr,polspline)
setwd("../../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl  %>% filter(!is.na(IDProv)) %>% mutate(D = as.factor(DMilitaryPresence), IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
paste0("IDProv",2:length(levels(fnl$IDProv))))
SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
"SL.polymars", "SL.mean","SL.npreg")
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
fnl %>% dplyr::select(starts_with("IDP")) %>% summarise(min = min(across))
?across
fnl %>% summarise(across(starts_with("IDProv"),list(min = min,max = max)))
fnl %>% dplyr:: select(!IDProv) %>% summarise(across(starts_with("IDProv"),list(min = min,max = max)))
provs <- fnl %>% dplyr:: select(!IDProv) %>% summarise(across(starts_with("IDProv"),list(min = min,max = max)))
View(provs)
provs <- fnl_vict %>% summarise(across(starts_with("IDProv"),list(min = min,max = max)))
View(fnl_rf_vict)
fnl <- fnl  %>% filter(!is.na(IDProv)) %>% mutate(D = DMilitaryPresence, IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
paste0("IDProv",2:length(levels(fnl$IDProv))))
SL_library <- c("SL.glm", "SL.randomForest", "SL.gam",
"SL.polymars", "SL.mean","SL.npreg")
SL_library <- c("SL.randomForest", "SL.gam", "SL.mean","SL.npreg")
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl  %>% filter(!is.na(IDProv)) %>% mutate(D = DMilitaryPresence, IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
paste0("IDProv",2:length(levels(fnl$IDProv))))
SL_library <- c("SL.randomForest", "SL.gam", "SL.mean","SL.npreg")
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
levels(fnl$IDProv)
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
rm(rm(list = ls()))
if(!require(pacman)){
install.packages("pacman")
library(pacman)
}
p_load(haven,stringr,dplyr,ggplot2,drtmle,nloptr,polspline)
setwd("../../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl  %>% filter(!is.na(IDProv)) %>% mutate(D = DMilitaryPresence, IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
paste0("IDProv",1:length(levels(fnl$IDProv))))
SL_library <- c("SL.randomForest", "SL.gam", "SL.mean","SL.npreg")
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
fnl_vict[,controls]
W<- fnl_vict[,controls]
W[,22]
range(W[,22])
view(W)
p_load(haven,stringr,dplyr,ggplot2,drtmle,nloptr,polspline)
setwd("../../Extracted Files/Data")
toload <- str_subset(list.files(),".dta")
data <- lapply(toload, read_dta)
fnl <- data[[1]]
set.seed(08540)
fnl <- fnl  %>% filter(!is.na(IDProv)) %>% mutate(D = DMilitaryPresence, IDProv = as.factor(IDProv))
fnl<- bind_cols(fnl,model.matrix( ~ IDProv - 1, data=fnl ))
controls <- c("share_allende70",
"share_alessandri70",
"lnDistStgo",
"lnDistRegCapital",
"Pop70_pthousands",
"sh_rural_70",
paste0("IDProv",2:length(levels(fnl$IDProv))))
SL_library <- c("SL.randomForest", "SL.gam", "SL.mean","SL.npreg")
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,all_of(controls),D) %>% na.omit()
fnl_vict[,controls]
W<-fnl_vict[,controls]
controls
fnl_vict
view(fnl_vict)
?all_of
?all_of
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,tidyselect::all_of(controls),D) %>% na.omit()
View(fnl_vict)
fnl_vict[,controls]W<-
W<-fnl_vict[,controls]
view(W)
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
SL_library <- c("SL.randomForest", "SL.gam", "SL.mean")
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,tidyselect::all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 10)
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_ovver= c("drtmle", "SL"),
n_SL = 1)
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_over= c("drtmle", "SL"),
n_SL = 1)
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=1,
avg_over= c("drtmle", "SL"),
n_SL = 1)
SL_library <- c("SL.randomForest", "SL.gam", "SL.mean","SL.npreg")
#Note - currently no consistent way to implement weighting in this method, so using population scaled
#outcomes where appropriate
#Victimization
fnl_vict <- fnl %>% dplyr::select(shVictims_70,tidyselect::all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
drobust <- drtmle(W = fnl_vict[,controls], A = fnl_vict$D, Y = fnl_vict$shVictims_70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=1,
avg_over= c("drtmle", "SL"),
n_SL = 1)
#NO Votes
fnl_no <- fnl %>% dplyr::select(VoteShareNo_pop70,all_of(controls),D) %>% na.omit()
#Use superleaner for OR and average over multiple calls
drobust_no <- drtmle(W = fnl_no[,controls], A = fnl_no$D, Y = fnl_no$VoteShareNo_pop70,
SL_g = SL_library, SL_Q = SL_library,
SL_gr = SL_library, SL_Qr = SL_library,
cvFolds=2,
avg_over= c("drtmle", "SL"),
n_SL = 10)
